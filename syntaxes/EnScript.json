{
    "fileTypes":[
        "EnScript"
    ],
    "foldingStartMarker":"^\\s*\/\\*|^(?![^{]*?\/\/|[^{]*?\/\\*(?!.*?\\*\/.*?\\{)).*?\\{\\s*($|\/\/|\/\\*(?!.*?\\*\/.*\\S))",
    "foldingStopMarker":"^\\s*\\*\/|^\\s*\\}",
    "keyEquivalent":"^~C",
    "name":"EnScript",
    "patterns":[
        {
            "begin":"\/\/\/",
            "captures":[
                {
                    "name":"punctuation.definition.comment.source.EnScript"
                }
            ],
            "end":"$\\n?",
            "name":"comment.block.documentation.source.EnScript",
            "patterns":[
                {
                    "begin":"(<\/?)(?:([-_a-zA-Z0-9]+)((:)))?([-_a-zA-Z0-9:]+)",
                    "captures":{
                        "1":{
                            "name":"punctuation.definition.tag.source.EnScript"
                        },
                        "2":{
                            "name":"entity.name.tag.namespace.source.EnScript"
                        },
                        "3":{
                            "name":"entity.name.tag.source.EnScript"
                        },
                        "4":{
                            "name":"punctuation.separator.namespace.source.EnScript"
                        },
                        "5":{
                            "name":"entity.name.tag.localname.source.EnScript"
                        }
                    },
                    "end":"(\/?>)",
                    "name":"keyword.other.documentation.source.EnScript",
                    "patterns":[
                        {
                            "captures":{
                                "1":{
                                    "name":"entity.other.attribute-name.namespace.source.EnScript"
                                },
                                "2":{
                                    "name":"entity.other.attribute-name.source.EnScript"
                                },
                                "3":{
                                    "name":"punctuation.separator.namespace.source.EnScript"
                                },
                                "4":{
                                    "name":"entity.other.attribute-name.localname.source.EnScript"
                                }
                            },
                            "match":" (?:([-_a-zA-Z0-9]+)((:)))?([_a-zA-Z-]+)="
                        },
                        {
                            "include":"#doubleQuotedString"
                        },
                        {
                            "include":"#singleQuotedString"
                        }
                    ]
                }
            ]
        },
        {
            "include":"#comments"
        },
        {
            "begin":"(?x)^\\s*\n((?:\\b(?:new|public|protected|private|static|virtual)\\b\\s)*)\n(class)\\s+\n([A-Za-z_]\\w+)\\b",
            "captures":{
                "1":{
                    "name":"storage.modifier.source.EnScript"
                },
                "2":{
                    "name":"storage.type.source.EnScript"
                },
                "3":{
                    "name":"entity.name.type.class.source.EnScript"
                }
            },
            "end":"{",
            "name":"meta.definition.class.source.EnScript",
            "patterns":[
                {
                    "include":"#classInheritance"
                }
            ]
        },
        {
            "match":"\\b(true|false|null|this)\\b",
            "name":"constant.language.source.EnScript"
        },
        {
            "match":"\\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\\.?[0-9]*)|(\\.[0-9]+))((e|E)(\\+|-)?[0-9]+)?)(L|l|UL|ul|u|U|F|f|ll|LL|ull|ULL)?\\b",
            "name":"constant.numeric.source.EnScript"
        },
        {
            "match":"\\b(if|else|while|for|forall|foreach|in|do|return|continue|break|switch|case|default)\\b",
            "name":"keyword.control.source.EnScript"
        },
        {
            "match":"\\b(new|typeof|typedef|typelib|include|property|weak|synchronized|delete)\\b",
            "name":"keyword.operator.source.EnScript"
        },
        {
            "match":"\\b(public|protected|private|virtual|static|const|new)\\b",
            "name":"storage.modifier.source.EnScript"
        },
        {
            "include":"#doubleQuotedStringLiteral"
        },
        {
            "include":"#doubleQuotedString"
        },
        {
            "include":"#singleQuotedString"
        },
        {
            "captures":{
                "1":{
                    "name":"keyword.other.using.source.EnScript"
                },
                "2":{
                    "name":"entity.name.type.package.source.EnScript"
                }
            },
            "match":"^\\s*(using)\\s+([^ ;]*);",
            "name":"meta.keyword.using.source.EnScript"
        },
        {
            "include":"#builtinTypes"
        },
        {
            "captures":{
                "1":{
                    "name":"keyword.other.namespace.source.EnScript"
                },
                "2":{
                    "name":"entity.name.type.namespace.source.EnScript"
                }
            },
            "match":"^\\s*(namespace)\\s+([^ ]+)(?:\\s*{)?$",
            "name":"meta.keyword.namespace.source.EnScript"
        },
        {
            "captures":{
                "2":{
                    "name":"keyword.control.import.source.EnScript"
                }
            },
            "match":"^(#)\\s*(if|else)\\b",
            "name":"meta.preprocessor.source.EnScript"
        }
    ],
    "repository":{
        "builtinTypes":{
            "patterns":[
                {
                    "match":"\\b(bool|byte|char|double|int|uint|long|ulong|short|ushort|String|variant|void|class|enum|pure)\\b",
                    "name":"storage.type.source.EnScript"
                }
            ]
        },
        "classInheritance":{
            "patterns":[
                {
                    "begin":":",
                    "end":"(?={)",
                    "patterns":[
                        {
                            "captures":{
                                "1":{
                                    "name":"storage.type.source.EnScript"
                                }
                            },
                            "match":"\\s*,?([A-Za-z_]\\w*)\\b"
                        }
                    ]
                }
            ]
        },
        "comments":{
            "patterns":[
                {
                    "begin":"\/\\*",
                    "captures":[
                        {
                            "name":"punctuation.definition.comment.source.EnScript"
                        }
                    ],
                    "end":"\\*\/\\n?",
                    "name":"comment.block.source.EnScript"
                },
                {
                    "captures":{
                        "1":{
                            "name":"punctuation.definition.comment.source.EnScript"
                        }
                    },
                    "match":"(\/\/).*$\\n?",
                    "name":"comment.line.double-slash.source.EnScript"
                }
            ]
        },
        "doubleQuotedString":{
            "begin":"\"",
            "beginCaptures":[
                {
                    "name":"punctuation.definition.string.begin.source.EnScript"
                }
            ],
            "end":"\"",
            "endCaptures":[
                {
                    "name":"punctuation.definition.string.end.source.EnScript"
                }
            ],
            "name":"string.quoted.double.source.EnScript",
            "patterns":[
                {
                    "match":"\\\\.",
                    "name":"constant.character.escape.source.EnScript"
                }
            ]
        },
        "doubleQuotedStringLiteral":{
            "captures":[
                {
                    "name":"punctuation.definition.string.begin.source.EnScript"
                }
            ],
            "match":"@\"([^\"]|\"\")*\"",
            "name":"string.quoted.double.literal.source.EnScript"
        },
        "singleQuotedString":{
            "begin":"'",
            "beginCaptures":[
                {
                    "name":"punctuation.definition.string.begin.source.EnScript"
                }
            ],
            "end":"'",
            "endCaptures":[
                {
                    "name":"punctuation.definition.string.end.source.EnScript"
                }
            ],
            "name":"string.quoted.single.xml",
            "patterns":[
                {
                    "match":"\\\\.",
                    "name":"constant.character.escape.source.EnScript"
                }
            ]
        },
        "statementRemainder":{
            "patterns":[
                {
                    "begin":"\\(",
                    "end":"(?=\\))",
                    "name":"meta.definition.param-list.source.EnScript",
                    "patterns":[
                        {
                            "include":"#builtinTypes"
                        }
                    ]
                }
            ]
        }
    },
    "scopeName":"source.EnScript",
    "uuid":"E651D960-B124-4F6C-8C4D-CE9396885030"
}